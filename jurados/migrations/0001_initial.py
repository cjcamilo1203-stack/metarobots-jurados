# Generated by Django 5.2.6 on 2025-09-24 16:00

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('rally', 'Rally'), ('futbol', 'Fútbol'), ('sumo_rc', 'Sumo RC'), ('sumo_autonomo', 'Sumo Autónomo'), ('barcos', 'Barcos'), ('velocista', 'Velocista')], max_length=20, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('autor_principal', models.CharField(max_length=100)),
                ('autor_secundario', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='robots', to='jurados.categoria')),
            ],
            options={
                'verbose_name': 'Robot',
                'verbose_name_plural': 'Robots',
                'ordering': ['nombre'],
                'unique_together': {('categoria', 'nombre')},
            },
        ),
        migrations.CreateModel(
            name='SesionRegistro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activa', models.BooleanField(default=False)),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.CharField(default='Jurado', max_length=100)),
                ('robot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sesiones', to='jurados.robot')),
            ],
            options={
                'verbose_name': 'Sesión de Registro',
                'verbose_name_plural': 'Sesiones de Registro',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='TiempoRegistro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiempo', models.DecimalField(decimal_places=5, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('metodo_registro', models.CharField(choices=[('esp32', 'ESP32'), ('manual', 'Manual')], default='esp32', max_length=20)),
                ('valido', models.BooleanField(default=True)),
                ('observaciones', models.TextField(blank=True)),
                ('robot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiempos', to='jurados.robot')),
                ('sesion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jurados.sesionregistro')),
            ],
            options={
                'verbose_name': 'Tiempo Registrado',
                'verbose_name_plural': 'Tiempos Registrados',
                'ordering': ['-fecha_registro'],
            },
        ),
    ]
